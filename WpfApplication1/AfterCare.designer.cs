#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AfterCareApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AfterCareDB")]
	public partial class AfterCareDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccess(Access instance);
    partial void UpdateAccess(Access instance);
    partial void DeleteAccess(Access instance);
    partial void InsertFaculty(Faculty instance);
    partial void UpdateFaculty(Faculty instance);
    partial void DeleteFaculty(Faculty instance);
    partial void InsertGuardian(Guardian instance);
    partial void UpdateGuardian(Guardian instance);
    partial void DeleteGuardian(Guardian instance);
    partial void InsertGuardian_Invoice(Guardian_Invoice instance);
    partial void UpdateGuardian_Invoice(Guardian_Invoice instance);
    partial void DeleteGuardian_Invoice(Guardian_Invoice instance);
    partial void InsertSession(Session instance);
    partial void UpdateSession(Session instance);
    partial void DeleteSession(Session instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public AfterCareDataContext() : 
				base(global::AfterCareApplication.Properties.Settings.Default.AfterCareDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AfterCareDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AfterCareDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AfterCareDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AfterCareDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Access> Accesses
		{
			get
			{
				return this.GetTable<Access>();
			}
		}
		
		public System.Data.Linq.Table<User_Session> User_Sessions
		{
			get
			{
				return this.GetTable<User_Session>();
			}
		}
		
		public System.Data.Linq.Table<Faculty> Faculties
		{
			get
			{
				return this.GetTable<Faculty>();
			}
		}
		
		public System.Data.Linq.Table<Faculty_Payroll> Faculty_Payrolls
		{
			get
			{
				return this.GetTable<Faculty_Payroll>();
			}
		}
		
		public System.Data.Linq.Table<Faculty_Phone> Faculty_Phones
		{
			get
			{
				return this.GetTable<Faculty_Phone>();
			}
		}
		
		public System.Data.Linq.Table<faculty_Wage> faculty_Wages
		{
			get
			{
				return this.GetTable<faculty_Wage>();
			}
		}
		
		public System.Data.Linq.Table<Guardian> Guardians
		{
			get
			{
				return this.GetTable<Guardian>();
			}
		}
		
		public System.Data.Linq.Table<Guardian_Invoice> Guardian_Invoices
		{
			get
			{
				return this.GetTable<Guardian_Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Guardian_Phone> Guardian_Phones
		{
			get
			{
				return this.GetTable<Guardian_Phone>();
			}
		}
		
		public System.Data.Linq.Table<Session> Sessions
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
		
		public System.Data.Linq.Table<Session_Statement> Session_Statements
		{
			get
			{
				return this.GetTable<Session_Statement>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Student_Fee> Student_Fees
		{
			get
			{
				return this.GetTable<Student_Fee>();
			}
		}
		
		public System.Data.Linq.Table<Student_Guardian> Student_Guardians
		{
			get
			{
				return this.GetTable<Student_Guardian>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Access")]
	public partial class Access : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _accessId;
		
		private string _accessName;
		
		private string _accessDescription;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaccessIdChanging(int value);
    partial void OnaccessIdChanged();
    partial void OnaccessNameChanging(string value);
    partial void OnaccessNameChanged();
    partial void OnaccessDescriptionChanging(string value);
    partial void OnaccessDescriptionChanged();
    #endregion
		
		public Access()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accessId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int accessId
		{
			get
			{
				return this._accessId;
			}
			set
			{
				if ((this._accessId != value))
				{
					this.OnaccessIdChanging(value);
					this.SendPropertyChanging();
					this._accessId = value;
					this.SendPropertyChanged("accessId");
					this.OnaccessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accessName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string accessName
		{
			get
			{
				return this._accessName;
			}
			set
			{
				if ((this._accessName != value))
				{
					this.OnaccessNameChanging(value);
					this.SendPropertyChanging();
					this._accessName = value;
					this.SendPropertyChanged("accessName");
					this.OnaccessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accessDescription", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string accessDescription
		{
			get
			{
				return this._accessDescription;
			}
			set
			{
				if ((this._accessDescription != value))
				{
					this.OnaccessDescriptionChanging(value);
					this.SendPropertyChanging();
					this._accessDescription = value;
					this.SendPropertyChanged("accessDescription");
					this.OnaccessDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Access_User", Storage="_Users", ThisKey="accessId", OtherKey="accessId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Access = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Access = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Session")]
	public partial class User_Session
	{
		
		private int _sessionId;
		
		private string _userId;
		
		private System.TimeSpan _userInTime;
		
		private System.TimeSpan _userOutTime;
		
		public User_Session()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionId", DbType="Int NOT NULL")]
		public int sessionId
		{
			get
			{
				return this._sessionId;
			}
			set
			{
				if ((this._sessionId != value))
				{
					this._sessionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this._userId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userInTime", DbType="Time NOT NULL")]
		public System.TimeSpan userInTime
		{
			get
			{
				return this._userInTime;
			}
			set
			{
				if ((this._userInTime != value))
				{
					this._userInTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userOutTime", DbType="Time NOT NULL")]
		public System.TimeSpan userOutTime
		{
			get
			{
				return this._userOutTime;
			}
			set
			{
				if ((this._userOutTime != value))
				{
					this._userOutTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculty")]
	public partial class Faculty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _facultyId;
		
		private string _userId;
		
		private string _streetNumber;
		
		private string _streetName;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfacultyIdChanging(int value);
    partial void OnfacultyIdChanged();
    partial void OnuserIdChanging(string value);
    partial void OnuserIdChanged();
    partial void OnstreetNumberChanging(string value);
    partial void OnstreetNumberChanged();
    partial void OnstreetNameChanging(string value);
    partial void OnstreetNameChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    #endregion
		
		public Faculty()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facultyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int facultyId
		{
			get
			{
				return this._facultyId;
			}
			set
			{
				if ((this._facultyId != value))
				{
					this.OnfacultyIdChanging(value);
					this.SendPropertyChanging();
					this._facultyId = value;
					this.SendPropertyChanged("facultyId");
					this.OnfacultyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streetNumber", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string streetNumber
		{
			get
			{
				return this._streetNumber;
			}
			set
			{
				if ((this._streetNumber != value))
				{
					this.OnstreetNumberChanging(value);
					this.SendPropertyChanging();
					this._streetNumber = value;
					this.SendPropertyChanged("streetNumber");
					this.OnstreetNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streetName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string streetName
		{
			get
			{
				return this._streetName;
			}
			set
			{
				if ((this._streetName != value))
				{
					this.OnstreetNameChanging(value);
					this.SendPropertyChanging();
					this._streetName = value;
					this.SendPropertyChanged("streetName");
					this.OnstreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Faculty", Storage="_User", ThisKey="userId", OtherKey="userId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Faculties.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Faculties.Add(this);
						this._userId = value.userId;
					}
					else
					{
						this._userId = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculty_Payroll")]
	public partial class Faculty_Payroll
	{
		
		private int _payrollId;
		
		private int _facultyId;
		
		private System.DateTime _startDate;
		
		private System.DateTime _endDate;
		
		public Faculty_Payroll()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payrollId", DbType="Int NOT NULL")]
		public int payrollId
		{
			get
			{
				return this._payrollId;
			}
			set
			{
				if ((this._payrollId != value))
				{
					this._payrollId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facultyId", DbType="Int NOT NULL")]
		public int facultyId
		{
			get
			{
				return this._facultyId;
			}
			set
			{
				if ((this._facultyId != value))
				{
					this._facultyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="Date NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this._startDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="Date NOT NULL")]
		public System.DateTime endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this._endDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculty_Phone")]
	public partial class Faculty_Phone
	{
		
		private int _facultyId;
		
		private string _facultyPhone;
		
		private string _phoneType;
		
		public Faculty_Phone()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facultyId", DbType="Int NOT NULL")]
		public int facultyId
		{
			get
			{
				return this._facultyId;
			}
			set
			{
				if ((this._facultyId != value))
				{
					this._facultyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facultyPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string facultyPhone
		{
			get
			{
				return this._facultyPhone;
			}
			set
			{
				if ((this._facultyPhone != value))
				{
					this._facultyPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phoneType
		{
			get
			{
				return this._phoneType;
			}
			set
			{
				if ((this._phoneType != value))
				{
					this._phoneType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.faculty_Wage")]
	public partial class faculty_Wage
	{
		
		private int _facultyId;
		
		private double _wageAmount;
		
		private string _wageType;
		
		public faculty_Wage()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facultyId", DbType="Int NOT NULL")]
		public int facultyId
		{
			get
			{
				return this._facultyId;
			}
			set
			{
				if ((this._facultyId != value))
				{
					this._facultyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wageAmount", DbType="Float NOT NULL")]
		public double wageAmount
		{
			get
			{
				return this._wageAmount;
			}
			set
			{
				if ((this._wageAmount != value))
				{
					this._wageAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wageType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string wageType
		{
			get
			{
				return this._wageType;
			}
			set
			{
				if ((this._wageType != value))
				{
					this._wageType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Guardian")]
	public partial class Guardian : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _guardianId;
		
		private string _userId;
		
		private string _streetNumber;
		
		private string _streetName;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private EntitySet<Guardian_Invoice> _Guardian_Invoices;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnguardianIdChanging(int value);
    partial void OnguardianIdChanged();
    partial void OnuserIdChanging(string value);
    partial void OnuserIdChanged();
    partial void OnstreetNumberChanging(string value);
    partial void OnstreetNumberChanged();
    partial void OnstreetNameChanging(string value);
    partial void OnstreetNameChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    #endregion
		
		public Guardian()
		{
			this._Guardian_Invoices = new EntitySet<Guardian_Invoice>(new Action<Guardian_Invoice>(this.attach_Guardian_Invoices), new Action<Guardian_Invoice>(this.detach_Guardian_Invoices));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int guardianId
		{
			get
			{
				return this._guardianId;
			}
			set
			{
				if ((this._guardianId != value))
				{
					this.OnguardianIdChanging(value);
					this.SendPropertyChanging();
					this._guardianId = value;
					this.SendPropertyChanged("guardianId");
					this.OnguardianIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streetNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string streetNumber
		{
			get
			{
				return this._streetNumber;
			}
			set
			{
				if ((this._streetNumber != value))
				{
					this.OnstreetNumberChanging(value);
					this.SendPropertyChanging();
					this._streetNumber = value;
					this.SendPropertyChanged("streetNumber");
					this.OnstreetNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streetName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string streetName
		{
			get
			{
				return this._streetName;
			}
			set
			{
				if ((this._streetName != value))
				{
					this.OnstreetNameChanging(value);
					this.SendPropertyChanging();
					this._streetName = value;
					this.SendPropertyChanged("streetName");
					this.OnstreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Guardian_Guardian_Invoice", Storage="_Guardian_Invoices", ThisKey="guardianId", OtherKey="guardianId")]
		public EntitySet<Guardian_Invoice> Guardian_Invoices
		{
			get
			{
				return this._Guardian_Invoices;
			}
			set
			{
				this._Guardian_Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Guardian", Storage="_User", ThisKey="userId", OtherKey="userId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Guardians.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Guardians.Add(this);
						this._userId = value.userId;
					}
					else
					{
						this._userId = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Guardian_Invoices(Guardian_Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Guardian = this;
		}
		
		private void detach_Guardian_Invoices(Guardian_Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Guardian = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Guardian_Invoice")]
	public partial class Guardian_Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _invoiceId;
		
		private int _guardianId;
		
		private System.DateTime _startDate;
		
		private System.DateTime _endDate;
		
		private bool _paid;
		
		private double _balance;
		
		private EntityRef<Guardian> _Guardian;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OninvoiceIdChanging(int value);
    partial void OninvoiceIdChanged();
    partial void OnguardianIdChanging(int value);
    partial void OnguardianIdChanged();
    partial void OnstartDateChanging(System.DateTime value);
    partial void OnstartDateChanged();
    partial void OnendDateChanging(System.DateTime value);
    partial void OnendDateChanged();
    partial void OnpaidChanging(bool value);
    partial void OnpaidChanged();
    partial void OnbalanceChanging(double value);
    partial void OnbalanceChanged();
    #endregion
		
		public Guardian_Invoice()
		{
			this._Guardian = default(EntityRef<Guardian>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int invoiceId
		{
			get
			{
				return this._invoiceId;
			}
			set
			{
				if ((this._invoiceId != value))
				{
					this.OninvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._invoiceId = value;
					this.SendPropertyChanged("invoiceId");
					this.OninvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianId", DbType="Int NOT NULL")]
		public int guardianId
		{
			get
			{
				return this._guardianId;
			}
			set
			{
				if ((this._guardianId != value))
				{
					if (this._Guardian.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnguardianIdChanging(value);
					this.SendPropertyChanging();
					this._guardianId = value;
					this.SendPropertyChanged("guardianId");
					this.OnguardianIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="Date NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="Date NOT NULL")]
		public System.DateTime endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnendDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("endDate");
					this.OnendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="Bit NOT NULL")]
		public bool paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Float NOT NULL")]
		public double balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Guardian_Guardian_Invoice", Storage="_Guardian", ThisKey="guardianId", OtherKey="guardianId", IsForeignKey=true)]
		public Guardian Guardian
		{
			get
			{
				return this._Guardian.Entity;
			}
			set
			{
				Guardian previousValue = this._Guardian.Entity;
				if (((previousValue != value) 
							|| (this._Guardian.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Guardian.Entity = null;
						previousValue.Guardian_Invoices.Remove(this);
					}
					this._Guardian.Entity = value;
					if ((value != null))
					{
						value.Guardian_Invoices.Add(this);
						this._guardianId = value.guardianId;
					}
					else
					{
						this._guardianId = default(int);
					}
					this.SendPropertyChanged("Guardian");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Guardian_Phone")]
	public partial class Guardian_Phone
	{
		
		private int _guardianId;
		
		private string _guardianPhone;
		
		private string _phoneType;
		
		public Guardian_Phone()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianId", DbType="Int NOT NULL")]
		public int guardianId
		{
			get
			{
				return this._guardianId;
			}
			set
			{
				if ((this._guardianId != value))
				{
					this._guardianId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string guardianPhone
		{
			get
			{
				return this._guardianPhone;
			}
			set
			{
				if ((this._guardianPhone != value))
				{
					this._guardianPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phoneType
		{
			get
			{
				return this._phoneType;
			}
			set
			{
				if ((this._phoneType != value))
				{
					this._phoneType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Session")]
	public partial class Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sessionId;
		
		private System.DateTime _sessionDate;
		
		private System.TimeSpan _sessionStartTime;
		
		private System.TimeSpan _sessionEndTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsessionIdChanging(int value);
    partial void OnsessionIdChanged();
    partial void OnsessionDateChanging(System.DateTime value);
    partial void OnsessionDateChanged();
    partial void OnsessionStartTimeChanging(System.TimeSpan value);
    partial void OnsessionStartTimeChanged();
    partial void OnsessionEndTimeChanging(System.TimeSpan value);
    partial void OnsessionEndTimeChanged();
    #endregion
		
		public Session()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int sessionId
		{
			get
			{
				return this._sessionId;
			}
			set
			{
				if ((this._sessionId != value))
				{
					this.OnsessionIdChanging(value);
					this.SendPropertyChanging();
					this._sessionId = value;
					this.SendPropertyChanged("sessionId");
					this.OnsessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionDate", DbType="Date NOT NULL")]
		public System.DateTime sessionDate
		{
			get
			{
				return this._sessionDate;
			}
			set
			{
				if ((this._sessionDate != value))
				{
					this.OnsessionDateChanging(value);
					this.SendPropertyChanging();
					this._sessionDate = value;
					this.SendPropertyChanged("sessionDate");
					this.OnsessionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionStartTime", DbType="Time NOT NULL")]
		public System.TimeSpan sessionStartTime
		{
			get
			{
				return this._sessionStartTime;
			}
			set
			{
				if ((this._sessionStartTime != value))
				{
					this.OnsessionStartTimeChanging(value);
					this.SendPropertyChanging();
					this._sessionStartTime = value;
					this.SendPropertyChanged("sessionStartTime");
					this.OnsessionStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionEndTime", DbType="Time NOT NULL")]
		public System.TimeSpan sessionEndTime
		{
			get
			{
				return this._sessionEndTime;
			}
			set
			{
				if ((this._sessionEndTime != value))
				{
					this.OnsessionEndTimeChanging(value);
					this.SendPropertyChanging();
					this._sessionEndTime = value;
					this.SendPropertyChanged("sessionEndTime");
					this.OnsessionEndTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Session_Statement")]
	public partial class Session_Statement
	{
		
		private int _statementId;
		
		private int _sessionId;
		
		private System.DateTime _startDate;
		
		private System.DateTime _endDate;
		
		private double _profit;
		
		public Session_Statement()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statementId", DbType="Int NOT NULL")]
		public int statementId
		{
			get
			{
				return this._statementId;
			}
			set
			{
				if ((this._statementId != value))
				{
					this._statementId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionId", DbType="Int NOT NULL")]
		public int sessionId
		{
			get
			{
				return this._sessionId;
			}
			set
			{
				if ((this._sessionId != value))
				{
					this._sessionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="Date NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this._startDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="Date NOT NULL")]
		public System.DateTime endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this._endDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profit", DbType="Float NOT NULL")]
		public double profit
		{
			get
			{
				return this._profit;
			}
			set
			{
				if ((this._profit != value))
				{
					this._profit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _studentId;
		
		private string _userId;
		
		private string _homeroom;
		
		private string _birthday;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstudentIdChanging(int value);
    partial void OnstudentIdChanged();
    partial void OnuserIdChanging(string value);
    partial void OnuserIdChanged();
    partial void OnhomeroomChanging(string value);
    partial void OnhomeroomChanged();
    partial void OnbirthdayChanging(string value);
    partial void OnbirthdayChanged();
    #endregion
		
		public Student()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					this.OnstudentIdChanging(value);
					this.SendPropertyChanging();
					this._studentId = value;
					this.SendPropertyChanged("studentId");
					this.OnstudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_homeroom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string homeroom
		{
			get
			{
				return this._homeroom;
			}
			set
			{
				if ((this._homeroom != value))
				{
					this.OnhomeroomChanging(value);
					this.SendPropertyChanging();
					this._homeroom = value;
					this.SendPropertyChanged("homeroom");
					this.OnhomeroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Student", Storage="_User", ThisKey="userId", OtherKey="userId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._userId = value.userId;
					}
					else
					{
						this._userId = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_Fee")]
	public partial class Student_Fee
	{
		
		private int _studentId;
		
		private double _feeAmount;
		
		private string _feeType;
		
		public Student_Fee()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int NOT NULL")]
		public int studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					this._studentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feeAmount", DbType="Float NOT NULL")]
		public double feeAmount
		{
			get
			{
				return this._feeAmount;
			}
			set
			{
				if ((this._feeAmount != value))
				{
					this._feeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feeType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string feeType
		{
			get
			{
				return this._feeType;
			}
			set
			{
				if ((this._feeType != value))
				{
					this._feeType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_Guardian")]
	public partial class Student_Guardian
	{
		
		private int _guardianId;
		
		private int _studentId;
		
		private string _relationship;
		
		public Student_Guardian()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guardianId", DbType="Int NOT NULL")]
		public int guardianId
		{
			get
			{
				return this._guardianId;
			}
			set
			{
				if ((this._guardianId != value))
				{
					this._guardianId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int NOT NULL")]
		public int studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					this._studentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relationship", DbType="VarChar(50)")]
		public string relationship
		{
			get
			{
				return this._relationship;
			}
			set
			{
				if ((this._relationship != value))
				{
					this._relationship = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _userId;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _password;
		
		private int _accessId;
		
		private EntitySet<Faculty> _Faculties;
		
		private EntitySet<Guardian> _Guardians;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<Access> _Access;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(string value);
    partial void OnuserIdChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnaccessIdChanging(int value);
    partial void OnaccessIdChanged();
    #endregion
		
		public User()
		{
			this._Faculties = new EntitySet<Faculty>(new Action<Faculty>(this.attach_Faculties), new Action<Faculty>(this.detach_Faculties));
			this._Guardians = new EntitySet<Guardian>(new Action<Guardian>(this.attach_Guardians), new Action<Guardian>(this.detach_Guardians));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Access = default(EntityRef<Access>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accessId", DbType="Int NOT NULL")]
		public int accessId
		{
			get
			{
				return this._accessId;
			}
			set
			{
				if ((this._accessId != value))
				{
					if (this._Access.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaccessIdChanging(value);
					this.SendPropertyChanging();
					this._accessId = value;
					this.SendPropertyChanged("accessId");
					this.OnaccessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Faculty", Storage="_Faculties", ThisKey="userId", OtherKey="userId")]
		public EntitySet<Faculty> Faculties
		{
			get
			{
				return this._Faculties;
			}
			set
			{
				this._Faculties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Guardian", Storage="_Guardians", ThisKey="userId", OtherKey="userId")]
		public EntitySet<Guardian> Guardians
		{
			get
			{
				return this._Guardians;
			}
			set
			{
				this._Guardians.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Student", Storage="_Students", ThisKey="userId", OtherKey="userId")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Access_User", Storage="_Access", ThisKey="accessId", OtherKey="accessId", IsForeignKey=true)]
		public Access Access
		{
			get
			{
				return this._Access.Entity;
			}
			set
			{
				Access previousValue = this._Access.Entity;
				if (((previousValue != value) 
							|| (this._Access.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Access.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Access.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._accessId = value.accessId;
					}
					else
					{
						this._accessId = default(int);
					}
					this.SendPropertyChanged("Access");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Faculties(Faculty entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Faculties(Faculty entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Guardians(Guardian entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Guardians(Guardian entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
